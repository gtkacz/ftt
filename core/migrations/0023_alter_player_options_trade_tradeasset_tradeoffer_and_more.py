# Generated by Django 5.2.4 on 2025-10-01 18:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0022_alter_notification_priority'),
        ('draft', '0016_alter_draftqueue_autopick_enabled'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='player',
            options={'ordering': ('last_name',)},
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('proposed', 'Proposed'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('waiting_approval', 'Waiting for Approval'), ('approved', 'Approved'), ('completed', 'Completed'), ('vetoed', 'Vetoed')], default='draft', help_text='Current status of the trade', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('proposed_at', models.DateTimeField(blank=True, help_text='When the trade was proposed to other teams', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the trade was executed', null=True)),
                ('approved_at', models.DateTimeField(blank=True, help_text='When the trade was approved by commissioner', null=True)),
                ('notes', models.TextField(blank=True, help_text='Optional notes about the trade')),
                ('approved_by', models.ForeignKey(blank=True, help_text='Commissioner who approved the trade', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_trades', to=settings.AUTH_USER_MODEL)),
                ('proposing_team', models.ForeignKey(help_text='Team that proposed this trade', on_delete=django.db.models.deletion.CASCADE, related_name='proposed_trades', to='core.team')),
                ('teams', models.ManyToManyField(help_text='All teams involved in the trade', related_name='trades', to='core.team')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TradeAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('player', 'Player'), ('pick', 'Pick')], help_text='Type of asset being traded', max_length=10)),
                ('pick_protection_type', models.CharField(blank=True, default='none', help_text='Type of protection on traded pick (none, swap_best, swap_worst, doesnt_convey)', max_length=20)),
                ('pick_protection_range_start', models.PositiveIntegerField(blank=True, help_text='Start of protected range for doesnt_convey (e.g., 1 for top-5)', null=True)),
                ('pick_protection_range_end', models.PositiveIntegerField(blank=True, help_text='End of protected range for doesnt_convey (e.g., 5 for top-5)', null=True)),
                ('pick_rollover_year', models.PositiveIntegerField(blank=True, help_text="Year to roll over to if pick doesn't convey", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('giving_team', models.ForeignKey(help_text='Team giving up this asset', on_delete=django.db.models.deletion.CASCADE, related_name='assets_given', to='core.team')),
                ('pick', models.ForeignKey(blank=True, help_text="Pick being traded (if asset_type is 'pick')", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trade_assets', to='draft.pick')),
                ('pick_swap_target', models.ForeignKey(blank=True, help_text='Pick to swap with for swap_best/swap_worst', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='swap_trade_assets', to='draft.pick')),
                ('player', models.ForeignKey(blank=True, help_text="Player being traded (if asset_type is 'player')", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trade_assets', to='core.player')),
                ('receiving_team', models.ForeignKey(help_text='Team receiving this asset', on_delete=django.db.models.deletion.CASCADE, related_name='assets_received', to='core.team')),
                ('trade', models.ForeignKey(help_text='The trade this asset is part of', on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='core.trade')),
            ],
            options={
                'ordering': ('asset_type', 'created_at'),
            },
        ),
        migrations.CreateModel(
            name='TradeOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('countered', 'Countered')], default='pending', help_text="Status of this team's response", max_length=20)),
                ('is_proposer', models.BooleanField(default=False, help_text='Whether this team proposed the trade')),
                ('message', models.TextField(blank=True, help_text='Optional message with the offer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_at', models.DateTimeField(blank=True, help_text='When the team responded to the offer', null=True)),
                ('counter_offer', models.ForeignKey(blank=True, help_text='If this is a counter-offer, reference to the offer it counters', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_offer', to='core.tradeoffer')),
                ('team', models.ForeignKey(help_text='Team making this offer/response', on_delete=django.db.models.deletion.CASCADE, related_name='trade_offers', to='core.team')),
                ('trade', models.ForeignKey(help_text='The trade this offer is for', on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='core.trade')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['status'], name='core_trade_status_4007e8_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['proposing_team', 'status'], name='core_trade_proposi_b1a295_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['-created_at'], name='core_trade_created_ef996d_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeasset',
            index=models.Index(fields=['trade', 'asset_type'], name='core_tradea_trade_i_baac07_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeasset',
            index=models.Index(fields=['giving_team'], name='core_tradea_giving__d31e23_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeasset',
            index=models.Index(fields=['receiving_team'], name='core_tradea_receivi_760b3a_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeoffer',
            index=models.Index(fields=['trade', 'team'], name='core_tradeo_trade_i_f3e930_idx'),
        ),
        migrations.AddIndex(
            model_name='tradeoffer',
            index=models.Index(fields=['status'], name='core_tradeo_status_dabb6c_idx'),
        ),
    ]
